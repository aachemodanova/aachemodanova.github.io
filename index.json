
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Chemodanova Angelina, 19 years old. Student of PFUR, direction “Computer and information sciences”. In addition to programming, I am fond of art and learning foreign languages.\n","date":1607817600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1607817600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Chemodanova Angelina, 19 years old. Student of PFUR, direction “Computer and information sciences”. In addition to programming, I am fond of art and learning foreign languages.","tags":null,"title":"Chemodanova Angelina","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":[],"categories":[],"content":"C++ (pronounced c-plus-plus) is a compiled, statically typed, general-purpose programming language.\nSupports such programming paradigms as procedural programming, object-oriented programming, generic programming. The language has a rich standard library that includes common containers and algorithms, I/O, regular expressions, multithreading support, and more. C++ combines features of both high-level and low-level languages. In comparison with its predecessor - the C language - the greatest attention is paid to support for object-oriented and generic programming.\nC++ is widely used for software development, being one of the most popular programming languages. Its scope includes the creation of operating systems, various application programs, device drivers, applications for embedded systems, high-performance servers, and computer games. There are many implementations of the C++ language, both free and commercial, and for various platforms. For example, on the x86 platform, these are GCC, Visual C++, Intel C++ Compiler, Embarcadero (Borland) C++ Builder, and others. C++ has had a huge impact on other programming languages, most notably Java and C#.\nThe syntax of C++ is inherited from the C language. Originally, one of the design principles was to maintain compatibility with C. However, C++ is not strictly a superset of C; The set of programs that can be translated equally well by both C and C++ compilers is quite large, but does not include all possible C programs.\n","date":1683559203,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683559203,"objectID":"69f0081ed3b04a7a048613ad31bbd104","permalink":"https://example.com/post/language/","publishdate":"2023-05-08T18:20:03+03:00","relpermalink":"/post/language/","section":"post","summary":"C++ (pronounced c-plus-plus) is a compiled, statically typed, general-purpose programming language.\nSupports such programming paradigms as procedural programming, object-oriented programming, generic programming. The language has a rich standard library that includes common containers and algorithms, I/O, regular expressions, multithreading support, and more.","tags":[],"title":"Language","type":"post"},{"authors":[],"categories":[],"content":"The week was good.\nI was at a concert and in the park, ate ice cream, rode rides.\nAlmost completed the first course.\n","date":1683559160,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683559160,"objectID":"6820849d2540065b18e953019403ebcb","permalink":"https://example.com/post/week5/","publishdate":"2023-05-08T18:19:20+03:00","relpermalink":"/post/week5/","section":"post","summary":"The week was good.\nI was at a concert and in the park, ate ice cream, rode rides.\nAlmost completed the first course.","tags":[],"title":"Week5","type":"post"},{"authors":[],"categories":[],"content":"bash\nUnix shell scripting, created by Ken Thompson in the early 1970s, is closely related to the C programming language. Bash, an updated Unix shell, was first released in the late 80s and is still under active development. Bash is typically scripted for server configuration, so it’s a good choice for modern cloud environments with containerized storage and microservices. Shell scripts are used quite often, so knowledge of this language is useful.\nAlso worth noting is zsh, which is currently the default shell on macOS.\nApplications: server administration, CLI tools, DevOps, virtualization.\nC/C++\nThese languages often occupy the top of various ratings - they are valued for their power and speed. C was created in the early 1970s by Dennis Ritchie, C++ was developed by Bjorn Stroustrup in 1985. Today, these two languages underpin everything from operating systems and games to modern scientific computing and machine learning. C and C++ are well suited for demanding applications that value low-level hardware access and performance. Learning these languages takes time and effort.\nScope: OS / SDK development, embedded devices, game engines, science.\nJava\nJava is a general-purpose OOP language developed in the 1990s by James Gosling at Sun (now owned by Oracle) and designed to be compiled into bytecode to run on the Java Virtual Machine. By 2020, this includes almost every kind of device, from TVs and game consoles to servers, phones and even kitchen appliances. The language is widely used in corporations and universities, which has made it popular among both novice programmers and experienced developers.\nApplications: enterprise applications, embedded systems, web services, games.\nPowerShell\nPowerShell was developed by Microsoft in 2006 to provide Unix-like command-line interface functionality on Windows. It was later released as open source and ported to macOS, CentOS and Ubuntu. PowerShell is widely used on systems that use Windows Server and other Microsoft technologies to make administration easier and reduce maintenance costs.\nApplications: Windows system administration, command line interface, scripts, maintenance.\n","date":1683548954,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683548954,"objectID":"505f1926928104c1ffdf04557ad3e744","permalink":"https://example.com/post/programming/","publishdate":"2023-05-08T15:29:14+03:00","relpermalink":"/post/programming/","section":"post","summary":"bash\nUnix shell scripting, created by Ken Thompson in the early 1970s, is closely related to the C programming language. Bash, an updated Unix shell, was first released in the late 80s and is still under active development.","tags":[],"title":"Programming","type":"post"},{"authors":[],"categories":[],"content":"May holidays fell this week.\nOn Monday I went home.\nI didn’t do anything all week, I just ate.\nI met with all my friends, had a rest.\n","date":1683548933,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683548933,"objectID":"39a351791719f471f59d283bbb99da7d","permalink":"https://example.com/post/week4/","publishdate":"2023-05-08T15:28:53+03:00","relpermalink":"/post/week4/","section":"post","summary":"May holidays fell this week.\nOn Monday I went home.\nI didn’t do anything all week, I just ate.\nI met with all my friends, had a rest.","tags":[],"title":"Week4","type":"post"},{"authors":null,"categories":null,"content":"This arts were drawn by watercolor.\n","date":1682553600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682553600,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://example.com/project/example/","publishdate":"2023-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"Drawn by watercolor","tags":["Drawing"],"title":"Watercolor","type":"project"},{"authors":[],"categories":[],"content":"This week has been boring for me.\nOn Monday I did lab work.\nOn Tuesday I was preparing for the colloquium.\nOn Wednesday I went to the cinema.\nOn Thursday I walked.\nI did lab work on Friday.\nAt the weekend I participated in the school of curators.\n","date":1682280162,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682280162,"objectID":"13e4216eb9efdf6a7e6e58c5965bce85","permalink":"https://example.com/post/week3/","publishdate":"2023-04-23T23:02:42+03:00","relpermalink":"/post/week3/","section":"post","summary":"This week has been boring for me.\nOn Monday I did lab work.\nOn Tuesday I was preparing for the colloquium.\nOn Wednesday I went to the cinema.\nOn Thursday I walked.","tags":[],"title":"Week3","type":"post"},{"authors":[],"categories":[],"content":"Введение\nВ этой статье вы узнаете, как правильно оформлять отчеты. Познакомитесь со структурой и правилами оформления скриншотов.\nСодержание\nОтчет и его структура Составляющие отчета Правила оформления скриншотов Отчет и его структура\nОтчет — сообщение, доклад о своих действиях, работе.\nОтчет обязательно должен содержать:\nтитульный лист цель работы задание ход работы вывод В зависимости от специфики отчета он может также содержать теоретическое введение, ответ на контрольные вопросы\nОтчет может быть выполнен в любом текстовом редакторе, который вам доступен. Например, классический Word или LibreOffice. Я в настоящее время выполняю отчеты в редакторе на языке разметки Markdown, поэтому это тоже вполне возможно. Главное — понимать цели.\nСоставляющие отчета\nТитульный лист. Должен содержать информацию о названии работы, по которой пишется отчет, и о человеке, выполнившем эту работу.\nЦель работы. В этом разделе, очевидно, расписывается цель (или цели) работы, которых планировалось достигнуть.\nЗадание. Под этим подзаголовком пишется задание, которое было необходимо выполнить. Как вариант, задание пишется в ходе работы рядом с каждым из номеров.\nХод работы. Это основной раздел отчета. В нем поэтапно расписывается каждый шаг, выполняемый в процессе работы. К каждому из выделенных шагов прикрепляется скриншот, который наглядно показывает и доказывает выполнение работы. Также этот раздел может содержать и другие элементы, исходя опять же из специфики отчета. Например, листинги программ, схемы цепей вставки из статей и так далее.\nВывод. Этот раздел завершает отчет и содержит в себе результат выполняемой работы. Обычно вывод совпадает с целями работы.\nПравила оформления скриншотов\nВажно знать, как правильно прилагать скриншот к отчету. Это нельзя сделать бездумно, просто вставив картинку в документ.\nВ первую очередь необходимо в тексте отчета указать ссылку на нужный рисунок, то есть подписать его номер рядом с нужным предложением. После необходимо вставить сам скриншот и обязательно пописать его. Подпись включает в себя номер рисунка (был указан ранее) и его название, соответствующее происходящему.\nЗаключение\nВ этой статье мы познакомились с понятием «отчет», его структурой и правилами оформления.\n","date":1682280150,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682280150,"objectID":"677b480c0a60831b4e4ce258e50b5ccc","permalink":"https://example.com/post/report/","publishdate":"2023-04-23T23:02:30+03:00","relpermalink":"/post/report/","section":"post","summary":"Введение\nВ этой статье вы узнаете, как правильно оформлять отчеты. Познакомитесь со структурой и правилами оформления скриншотов.\nСодержание\nОтчет и его структура Составляющие отчета Правила оформления скриншотов Отчет и его структура","tags":[],"title":"Report","type":"post"},{"authors":[],"categories":[],"content":"Markdown is a text markup language. Such texts are easy to write and read. They can be easily converted to HTML. Most programmers prefer Markdown for writing documentation, describing their projects, writing blogs, and so on.\nWhat does it mean?\nA “markup language” is simply a set of conventions, rules.\nLet’s say you’re texting a friend. They cannot make text bold or italic. You agree with a friend: if I write something like this between the asterisks, then consider it as italic text. And if I write something between two asterisks, then consider that this is bold text. You made up the rules.\nMarkdown is a set of such rules.\nThe rules are clear to different programs and sites. For example, the “Questions and Answers” in the Hexlet lessons support Markdown. This means that you can write texts there according to Markdown rules, and after clicking “Submit”, the markup will become real: text in single asterisks will become italic, text in double asterisks will become bold, and so on. This is the conversion from Markdown to HTML. Why is this needed?\nTo add markup where no real markup is possible. For example, in a simple text file or in the same SMS, where it is impossible to bold, create headings, highlight quotes, etc. For more convenient writing of texts for subsequent conversion to HTML or other formats.\nMarkdown Syntax\nThis is a quick reference to the basic elements of Markdown syntax. There is no single standard, and different versions of Markdown may differ in details. But the basic elements from the list below are supported in all standards. Text selection\nThis text will be italicized This text will be italic (italic)\nThis text will be bold This text will be bold\nYou can insert one type into another\nLinks\nhttps://hexlet.io - the text of a simple link will become a clickable link automatically\nYou can make any text a link:\nThis is a Hexlet link\nQuote\n That’s a wise quote wise man.\n Images\n   Lists\nUnnumbered list:\n Paragraph *One more item  Subparagraph Another sub-item    Numbered list:\n Item One more point  Subparagraph One more subparagraph    You can use any numbers in a numbered list - it doesn’t matter. When converted to HTML or another format, the numbers will become correct and consistent (1, 2, 3, etc.).\n","date":1680869521,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680869521,"objectID":"a0ade9b4b218a8a455292eee739b86e8","permalink":"https://example.com/post/markdown/","publishdate":"2023-04-07T15:12:01+03:00","relpermalink":"/post/markdown/","section":"post","summary":"Markdown is a text markup language. Such texts are easy to write and read. They can be easily converted to HTML. Most programmers prefer Markdown for writing documentation, describing their projects, writing blogs, and so on.","tags":[],"title":"Markdown","type":"post"},{"authors":[],"categories":[],"content":"Эта неделя выдалась у меня насыщенной.\nВ понедельник я делала лабораторную работу.\nВо вторник я готовилась к контрольной работе по математической логике.\nВ среду я помогала однокурснику с конкурсом.\nВ четверг я гуляла.\nВ пятницу делала лабораторные работы.\nНа выходных планирую спать.\n","date":1680867992,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680867992,"objectID":"f6cb596f9708bd4d8cab2051ab772408","permalink":"https://example.com/post/week-2/","publishdate":"2023-04-07T14:46:32+03:00","relpermalink":"/post/week-2/","section":"post","summary":"Эта неделя выдалась у меня насыщенной.\nВ понедельник я делала лабораторную работу.\nВо вторник я готовилась к контрольной работе по математической логике.\nВ среду я помогала однокурснику с конкурсом.\nВ четверг я гуляла.","tags":[],"title":"Week 2","type":"post"},{"authors":[],"categories":[],"content":"Эта неделя получилась у меня особо активной.\nНа выходных я отдыхала в гостях и была в кино.\nВ понедельник я сделала 6 лабораторную работу.\nВо вторник я написала контрольную работу по математическому анализу.\nВ среду я выступала с сообщением на тему “Архитектура России 18 века”, и с утра разбила коленочку.\nВ четверг я была на мероприятии “Голос”, мероприятие было очень интересным.\nВ пятницу я делала индивидуальный проект.\nНа этих выходных планирую испечь блинчики.\n","date":1679073497,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679073497,"objectID":"638f893d2f20b89bdc47b024798843e8","permalink":"https://example.com/post/my_week/","publishdate":"2023-03-17T20:18:17+03:00","relpermalink":"/post/my_week/","section":"post","summary":"Эта неделя получилась у меня особо активной.\nНа выходных я отдыхала в гостях и была в кино.\nВ понедельник я сделала 6 лабораторную работу.\nВо вторник я написала контрольную работу по математическому анализу.","tags":[],"title":"My_week","type":"post"},{"authors":[],"categories":[],"content":"Introduction This post will introduce you to the version control system. We will first learn the basics of version control systems, then move on to how to run Git on the OS and finally configure it to work. In the end, we get the system finally configured for operation.\nContent\n About the version control system Local version control systems Centralized version control systems Distributed version control systems  About the version control system\nWhat is a “version control system” and why is it important? A version control system is a system that records changes to a file or set of files over time and allows you to revert to a specific version later. For file versioning, this book will use software source code as an example, although you can actually use versioning for just about any type of file.\nIf you’re a graphic or web designer and want to save every version of an image or layout (most likely you will), a version control system (hereinafter referred to as VCS) is just what you need. It allows you to return files to the state they were before the changes, return the project to its original state, see the changes, see who last changed something and caused the problem, who set the task and when, and much more. Using VCS also generally means that if you break something or lose files, you can easily fix it. In addition to everything, you will get all this without any additional effort.\nLocal version control systems Many people use copying files into a separate directory as a version control method (perhaps even a timestamped directory, if they’re smart enough). This approach is very common due to its simplicity, but it is incredibly error prone. It’s easy to forget which directory you’re in and accidentally change the wrong file or copy the wrong files.\nTo solve this problem, programmers long ago developed local VCSs with a simple database that keeps a record of all changes to files, thus providing revision control.\nOne popular VCS was the RCS system, which is still distributed with many computers today. RCS stores sets of patches (differences between files) on disk in a special format, using which it can recreate the state of each file at a given point in time.\nCentralized version control systems\nThe next big problem people face is the need to interact with other developers. In order to deal with it, centralized version control systems (Centralized Version Control System, hereinafter CVCS) were developed. Systems such as CVS, Subversion, and Perforce use a single server that holds all versions of files, and a number of clients that retrieve files from this centralized repository. The use of CVCS has been the standard for many years.\nThis approach has many advantages, especially over local VCS. For example, all project developers know to some extent what each of them does. Administrators have full control over who can do what, and it’s much easier to administer CVCS than it is to manage local databases on each client. Despite this, this approach also has serious disadvantages. The most obvious downside is the single point of failure represented by the centralized server. If that server goes down for an hour, during that time no one will be able to use version control to save the changes they are working on, and no one will be able to share those changes with other developers. If the hard disk where the central database is stored is damaged and there are no timely backups, you will lose everything—the entire history of the project, not counting the single snapshots of the repository that were saved on the local machines of the developers. Local VCSs suffer from the same problem: when all project history is stored in one place, you risk losing everything.\nDistributed version control systems\nThis is where Distributed Version Control System (DVCS) comes into play. In DVCS (such as Git, Mercurial, Bazaar or Darcs), clients don’t just download a snapshot of all files (the state of the files at a particular point in time)—they copy the entire repository. In this case, if one of the servers through which the developers communicated dies, any client repository can be copied to another server to continue working. Each copy of the repository is a complete backup of all data.\nMoreover, many DVCSs can interact with multiple remote repositories at the same time, so you can work with different groups of people using different approaches at the same time within the same project.\n","date":1679072803,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679072803,"objectID":"b51c39c0ac0ec5a38bb139cda30bb055","permalink":"https://example.com/post/git/","publishdate":"2023-03-17T20:06:43+03:00","relpermalink":"/post/git/","section":"post","summary":"Introduction This post will introduce you to the version control system. We will first learn the basics of version control systems, then move on to how to run Git on the OS and finally configure it to work.","tags":[],"title":"Git","type":"post"},{"authors":["Chemodanova Angelina","吳恩達"],"categories":["Demo","教程"],"content":"import libr print(\u0026#39;hello\u0026#39;) Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more    \nGet Started  👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem  Hugo Academic CLI: Automatically import publications from BibTeX  Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://example.com/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":null,"categories":null,"content":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you’ll find some examples of the types of technical content that can be rendered with Wowchemy.\nExamples Code Wowchemy supports a Markdown extension for highlighting code syntax. You can customize the styles under the syntax_highlighter option in your config/_default/params.yaml file.\n```python import pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() ```  renders as\nimport pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() Mindmaps Wowchemy supports a Markdown extension for mindmaps.\nSimply insert a Markdown markmap code block and optionally set the height of the mindmap as shown in the example below.\nA simple mindmap defined as a Markdown list:\n ```markmap {height=\u0026#34;200px\u0026#34;} - Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal ```    renders as\n- Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal  A more advanced mindmap with formatting, code blocks, and math:\n ```markmap - Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ ```    renders as\n- Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$  Charts Wowchemy supports the popular Plotly format for interactive charts.\nSave your Plotly JSON in your page folder, for example line-chart.json, and then add the {{\u0026lt; chart data=\u0026#34;line-chart\u0026#34; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\n  (function() { let a = setInterval( function() { if ( typeof window.Plotly === \u0026#39;undefined\u0026#39; ) { return; } clearInterval( a ); Plotly.d3.json(\u0026#34;./line-chart.json\u0026#34;, function(chart) { Plotly.plot(\u0026#39;chart-937628541\u0026#39;, chart.data, chart.layout, {responsive: true}); }); }, 500 ); })();  You might also find the Plotly JSON Editor useful.\nMath Wowchemy supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.yaml file.\nTo render inline or block math, wrap your LaTeX math with {{\u0026lt; math \u0026gt;}}$...${{\u0026lt; /math \u0026gt;}} or {{\u0026lt; math \u0026gt;}}$$...$${{\u0026lt; /math \u0026gt;}}, respectively. (We wrap the LaTeX math in the Wowchemy math shortcode to prevent Hugo rendering our math as Markdown. The math shortcode is new in v5.5-dev.)\nExample math block:\n{{\u0026lt; math \u0026gt;}} $$\\gamma_{n} =\\frac{ \\left| \\left(\\mathbfx_{n} -\\mathbfx_{n-1} \\right)^T \\left[\\nablaF (\\mathbfx_{n})-\\nablaF (\\mathbfx_{n-1})\\right]\\right|}{\\left\\|\\nablaF(\\mathbf{x}_{n})-\\nablaF(\\mathbf{x}_{n-1})\\right\\|^2} $$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$ Example inline math {{\u0026lt; math \u0026gt;}}$\\nabla F(\\mathbf{x}_{n})${{\u0026lt; /math \u0026gt;}} renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the math linebreak (\\\\):\n{{\u0026lt; math \u0026gt;}} $$f(k;p_{0}^{*})=\\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$ {{\u0026lt; /math \u0026gt;}} renders as\n$$ f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases} $$ Diagrams Wowchemy supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ```  renders as\ngraph TD A[Hard] --|Text| B(Round) B -- C{Decision} C --|One| D[Result 1] C --|Two| E[Result 2]  An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ```  renders as\nsequenceDiagram Alice-John: Hello John, how are you? loop Healthcheck John-John: Fight against hypochondria end Note right of John: Rational thoughts! John--Alice: Great! John-Bob: How about you? Bob--John: Jolly good!  An example Gantt diagram:\n```mermaid …","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://example.com/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Markdown","type":"post"},{"authors":["Chemodanova Angelina"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://example.com/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":["Chemodanova Angelina"],"categories":[],"content":"from IPython.core.display import Image Image(\u0026#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png\u0026#39;)    print(\u0026#34;Welcome to Academic!\u0026#34;) Welcome to Academic!  Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post\u0026#39;s title date: 2019-09-01 # Put any other Academic metadata here... --- Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post’s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=. Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://example.com/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Chemodanova Angelina","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://example.com/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Chemodanova Angelina","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://example.com/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]