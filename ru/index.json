
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Чемоданова Ангелина, 19 лет. Студентка РУДН, направления “Компьютерные и информационные науки”. Помимо программирования увлекаюсь искусством и изучением иностранных языков.\n","date":1607817600,"expirydate":-62135596800,"kind":"term","lang":"ru","lastmod":1607817600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Чемоданова Ангелина, 19 лет. Студентка РУДН, направления “Компьютерные и информационные науки”. Помимо программирования увлекаюсь искусством и изучением иностранных языков.","tags":null,"title":"Чемоданова Ангелина","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/ru/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":[],"categories":[],"content":"C++ (читается си-плюс-плюс) — компилируемый, статически типизированный язык программирования общего назначения.\nПоддерживает такие парадигмы программирования, как процедурное программирование, объектно-ориентированное программирование, обобщённое программирование. Язык имеет богатую стандартную библиотеку, которая включает в себя распространённые контейнеры и алгоритмы, ввод-вывод, регулярные выражения, поддержку многопоточности и другие возможности. C++ сочетает свойства как высокоуровневых, так и низкоуровневых языков. В сравнении с его предшественником — языком C — наибольшее внимание уделено поддержке объектно-ориентированного и обобщённого программирования.\nC++ широко используется для разработки программного обеспечения, являясь одним из самых популярных языков программирования. Область его применения включает создание операционных систем, разнообразных прикладных программ, драйверов устройств, приложений для встраиваемых систем, высокопроизводительных серверов, а также компьютерных игр. Существует множество реализаций языка C++, как бесплатных, так и коммерческих и для различных платформ. Например, на платформе x86 это GCC, Visual C++, Intel C++ Compiler, Embarcadero (Borland) C++ Builder и другие. C++ оказал огромное влияние на другие языки программирования, в первую очередь на Java и C#.\nСинтаксис C++ унаследован от языка C. Изначально одним из принципов разработки было сохранение совместимости с C. Тем не менее C++ не является в строгом смысле надмножеством C; множество программ, которые могут одинаково успешно транслироваться как компиляторами C, так и компиляторами C++, довольно велико, но не включает все возможные программы на C.\n","date":1683559203,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1683559203,"objectID":"69f0081ed3b04a7a048613ad31bbd104","permalink":"https://example.com/ru/post/language/","publishdate":"2023-05-08T18:20:03+03:00","relpermalink":"/ru/post/language/","section":"post","summary":"C++ (читается си-плюс-плюс) — компилируемый, статически типизированный язык программирования общего назначения.\nПоддерживает такие парадигмы программирования, как процедурное программирование, объектно-ориентированное программирование, обобщённое программирование. Язык имеет богатую стандартную библиотеку, которая включает в себя распространённые контейнеры и алгоритмы, ввод-вывод, регулярные выражения, поддержку многопоточности и другие возможности.","tags":[],"title":"Язык","type":"post"},{"authors":[],"categories":[],"content":"Неделя была хорошей.\nЯ была на концерте и в парке, кушала мороженое, каталась на аттракционах.\nПрактически закончила первый курс.\n","date":1683559160,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1683559160,"objectID":"6c9b5770db2e00301009628eb3b9bd0a","permalink":"https://example.com/ru/post/%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F-5/","publishdate":"2023-05-08T18:19:20+03:00","relpermalink":"/ru/post/%D0%BD%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F-5/","section":"post","summary":"Неделя была хорошей.\nЯ была на концерте и в парке, кушала мороженое, каталась на аттракционах.\nПрактически закончила первый курс.","tags":[],"title":"Неделя 5","type":"post"},{"authors":[],"categories":[],"content":"Bash\nСценарии командной оболочки Unix, созданные Кеном Томпсоном в начале 1970-х годов, тесно связаны с языком программирования C. Bash — обновленная оболочка Unix — была впервые выпущена в конце 80-х годов и до сих пор активно разрабатывается. На Bash обычно пишутся сценарии конфигурации сервера, поэтому это хороший выбор для работы в современных облачных средах с контейнерным хранением и микросервисами. Скрипты командной оболочки используются достаточно часто, так что знание этого языка пригодится.\nТакже стоит обратить внимание на zsh, который в настоящее время является оболочкой по умолчанию в macOS.\nОбласти применения: администрирование сервера, инструменты интерфейса командной строки, DevOps, виртуализация.\nC/C++\nЭти языки часто занимают вершины различных рейтингов — их ценят за мощность и быстродействие. C был создан в начале 1970-х годов Деннисом Ритчи, C ++ в 1985 году разработал Бьёрн Страуструп. Сегодня два этих языка лежат в основе всего: от ОС и игр до современных научных вычислений и машинного обучения. C и C++ хорошо подходят для требовательных приложений, которым важны низкоуровневый доступ к оборудованию и производительность. Для освоения этих языков нужно время и определенные усилия.\nОбласть применения: разработка ОС / SDK, встроенные устройства, игровые движки, наука.\nJava\nJava — это ООП-язык общего назначения, разработанный в 1990-х годах Джеймсом Гослингом в Sun (сейчас принадлежит Oracle) и предназначенный для компиляции в байт-код для запуска на виртуальной машине Java. К 2020 году к ним относятся практически все виды устройств — от телевизоров и игровых приставок до серверов, телефонов и даже кухонных приборов. Язык широко распространен в корпорациях и университетах, что сделало его популярным как среди начинающих программистов, так и среди опытных разработчиков.\nОбласти применения: корпоративные приложения, встроенные системы, веб-сервисы, игры.\nPowerShell\nPowerShell был разработан Microsoft в 2006 году для предоставления Unix-подобных функций интерфейса командной строки в Windows. Позже он был выпущен с открытым исходным кодом и портирован на macOS, CentOS и Ubuntu. PowerShell широко применяется в системах, использующих Windows Server и другие технологии Microsoft: он делает администрирование удобнее и снижает затраты на обслуживание.\nОбласти применения: системное администрирование Windows, интерфейс командной строки, скрипты, обслуживание.\n","date":1683548954,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1683548954,"objectID":"505f1926928104c1ffdf04557ad3e744","permalink":"https://example.com/ru/post/programming/","publishdate":"2023-05-08T15:29:14+03:00","relpermalink":"/ru/post/programming/","section":"post","summary":"Bash\nСценарии командной оболочки Unix, созданные Кеном Томпсоном в начале 1970-х годов, тесно связаны с языком программирования C. Bash — обновленная оболочка Unix — была впервые выпущена в конце 80-х годов и до сих пор активно разрабатывается.","tags":[],"title":"Programming","type":"post"},{"authors":[],"categories":[],"content":"На эту неделю выпали майские праздники.\nВ понедельник я уехала домой.\nВсю неделю ничего не делала, только кушала.\nВстретилась со всеми друзьями, отдохнула.\n","date":1683548933,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1683548933,"objectID":"39a351791719f471f59d283bbb99da7d","permalink":"https://example.com/ru/post/week4/","publishdate":"2023-05-08T15:28:53+03:00","relpermalink":"/ru/post/week4/","section":"post","summary":"На эту неделю выпали майские праздники.\nВ понедельник я уехала домой.\nВсю неделю ничего не делала, только кушала.\nВстретилась со всеми друзьями, отдохнула.","tags":[],"title":"Week4","type":"post"},{"authors":null,"categories":null,"content":"This arts were drawn by watercolor.\n","date":1682553600,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1682553600,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://example.com/ru/project/example/","publishdate":"2023-04-27T00:00:00Z","relpermalink":"/ru/project/example/","section":"project","summary":"Drawn by watercolor","tags":["Drawing"],"title":"Watercolor","type":"project"},{"authors":[],"categories":[],"content":"Эта неделя была у меня скучной.\nВ понедельник я делала лабораторную работу.\nВо вторник я готовилась к коллоквиуму.\nВ среду я была в кино.\nВ четверг я гуляла.\nВ пятницу делала лабораторные работы.\nНа выходных участвовала в школе кураторов.\n","date":1682280162,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1682280162,"objectID":"13e4216eb9efdf6a7e6e58c5965bce85","permalink":"https://example.com/ru/post/week3/","publishdate":"2023-04-23T23:02:42+03:00","relpermalink":"/ru/post/week3/","section":"post","summary":"Эта неделя была у меня скучной.\nВ понедельник я делала лабораторную работу.\nВо вторник я готовилась к коллоквиуму.\nВ среду я была в кино.\nВ четверг я гуляла.\nВ пятницу делала лабораторные работы.","tags":[],"title":"Week3","type":"post"},{"authors":[],"categories":[],"content":"Введение\nВ этой статье вы узнаете, как правильно оформлять отчеты. Познакомитесь со структурой и правилами оформления скриншотов.\nСодержание\nОтчет и его структура Составляющие отчета Правила оформления скриншотов Отчет и его структура\nОтчет — сообщение, доклад о своих действиях, работе.\nОтчет обязательно должен содержать:\nтитульный лист цель работы задание ход работы вывод В зависимости от специфики отчета он может также содержать теоретическое введение, ответ на контрольные вопросы\nОтчет может быть выполнен в любом текстовом редакторе, который вам доступен. Например, классический Word или LibreOffice. Я в настоящее время выполняю отчеты в редакторе на языке разметки Markdown, поэтому это тоже вполне возможно. Главное — понимать цели.\nСоставляющие отчета\nТитульный лист. Должен содержать информацию о названии работы, по которой пишется отчет, и о человеке, выполнившем эту работу.\nЦель работы. В этом разделе, очевидно, расписывается цель (или цели) работы, которых планировалось достигнуть.\nЗадание. Под этим подзаголовком пишется задание, которое было необходимо выполнить. Как вариант, задание пишется в ходе работы рядом с каждым из номеров.\nХод работы. Это основной раздел отчета. В нем поэтапно расписывается каждый шаг, выполняемый в процессе работы. К каждому из выделенных шагов прикрепляется скриншот, который наглядно показывает и доказывает выполнение работы. Также этот раздел может содержать и другие элементы, исходя опять же из специфики отчета. Например, листинги программ, схемы цепей вставки из статей и так далее.\nВывод. Этот раздел завершает отчет и содержит в себе результат выполняемой работы. Обычно вывод совпадает с целями работы.\nПравила оформления скриншотов\nВажно знать, как правильно прилагать скриншот к отчету. Это нельзя сделать бездумно, просто вставив картинку в документ.\nВ первую очередь необходимо в тексте отчета указать ссылку на нужный рисунок, то есть подписать его номер рядом с нужным предложением. После необходимо вставить сам скриншот и обязательно пописать его. Подпись включает в себя номер рисунка (был указан ранее) и его название, соответствующее происходящему.\nЗаключение\nВ этой статье мы познакомились с понятием «отчет», его структурой и правилами оформления.\n","date":1682280150,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1682280150,"objectID":"677b480c0a60831b4e4ce258e50b5ccc","permalink":"https://example.com/ru/post/report/","publishdate":"2023-04-23T23:02:30+03:00","relpermalink":"/ru/post/report/","section":"post","summary":"Введение\nВ этой статье вы узнаете, как правильно оформлять отчеты. Познакомитесь со структурой и правилами оформления скриншотов.\nСодержание\nОтчет и его структура Составляющие отчета Правила оформления скриншотов Отчет и его структура","tags":[],"title":"Report","type":"post"},{"authors":[],"categories":[],"content":"Markdown — язык разметки текстов. Такие тексты легко писать и читать. Их можно без труда сконвертировать в HTML. Большинство программистов предпочитают Markdown для написания документации, описаний своих проектов, написания блогов и так далее.\nЧто это значит?\n«Язык разметки» — это просто набор соглашений, правил.\nДопустим, что вы общаетесь с другом по СМС. В них нельзя сделать текст жирным или наклонным. Вы договариваетесь с другом: если я пишу что-то вот так между звездочками, то считай, что это наклонный текст. А если я пишу что-то между двумя звездочками, то считай, что это жирный текст. Вы придумали правила.\nMarkdown — это набор подобных правил.\nПравила понятны разным программам и сайтам. Например, «Вопросы и ответы» в уроках на Хекслете поддерживают Markdown. Это значит, что вы можете писать туда тексты по правилам Markdown, а после нажатия «Отправить» разметка станет реальной: текст в одинарных звездочках станет наклонным, текст в двойных звездочках станет жирным и так далее. Это конвертация из Markdown в HTML. Зачем это нужно?\nДля добавления разметки туда, где невозможна реальная разметка. Например, в простом текстовом файле или в тех же СМС, где невозможно выделение жирным, создание заголовков, выделение цитат и пр. Для более удобного написания текстов для последующей конвертации в HTML или другие форматы.\nСинтаксис Markdown\nЭто краткий справочник основных элементов синтаксиса Markdown. Единого стандарта не существует и разные версии Markdown могут отличаться в деталях. Но базовые элементы из списка ниже поддерживаются во всех стандартах. Выделение текста\nЭтот текст будет наклонным (курсив) Этот текст будет наклонным (курсив)\nЭтот текст будет жирным Этот текст будет жирным\nМожно вставлять один тип в другой\nСсылки\nhttps://hexlet.io — текст простой ссылки станет кликабельной ссылкой автоматически\nСсылкой можно сделать любой текст:\nЭто ссылка на Хекслет\nЦитата\n Это мудрая цитата Мудрого человека.\n Картинки\n   Списки\nНепронумерованный список:\n Пункт Еще один пункт  Подпункт Еще один подпункт    Пронумерованный список:\n Пункт Еще один пункт Подпункт Еще один подпункт  В пронумерованном списке можно использовать любые числа — это не важно. При конвертации в HTML или другой формат числа станут правильными и последовательными (1, 2, 3 и т.д.).\n","date":1680869521,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1680869521,"objectID":"a0ade9b4b218a8a455292eee739b86e8","permalink":"https://example.com/ru/post/markdown/","publishdate":"2023-04-07T15:12:01+03:00","relpermalink":"/ru/post/markdown/","section":"post","summary":"Markdown — язык разметки текстов. Такие тексты легко писать и читать. Их можно без труда сконвертировать в HTML. Большинство программистов предпочитают Markdown для написания документации, описаний своих проектов, написания блогов и так далее.","tags":[],"title":"Markdown","type":"post"},{"authors":[],"categories":[],"content":"Эта неделя выдалась у меня насыщенной.\nВ понедельник я делала лабораторную работу.\nВо вторник я готовилась к контрольной работе по математической логике.\nВ среду я помогала однокурснику с конкурсом.\nВ четверг я гуляла.\nВ пятницу делала лабораторные работы.\nНа выходных планирую спать.\n","date":1680867992,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1680867992,"objectID":"f6cb596f9708bd4d8cab2051ab772408","permalink":"https://example.com/ru/post/week-2/","publishdate":"2023-04-07T14:46:32+03:00","relpermalink":"/ru/post/week-2/","section":"post","summary":"Эта неделя выдалась у меня насыщенной.\nВ понедельник я делала лабораторную работу.\nВо вторник я готовилась к контрольной работе по математической логике.\nВ среду я помогала однокурснику с конкурсом.\nВ четверг я гуляла.","tags":[],"title":"Week 2","type":"post"},{"authors":[],"categories":[],"content":"Эта неделя получилась у меня особо активной.\nНа выходных я отдыхала в гостях и была в кино.\nВ понедельник я сделала 6 лабораторную работу.\nВо вторник я написала контрольную работу по математическому анализу.\nВ среду я выступала с сообщением на тему “Архитектура России 18 века”, и с утра разбила коленочку.\nВ четверг я была на мероприятии “Голос”, мероприятие было очень интересным.\nВ пятницу я делала индивидуальный проект.\nНа этих выходных планирую испечь блинчики.\n","date":1679073497,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1679073497,"objectID":"638f893d2f20b89bdc47b024798843e8","permalink":"https://example.com/ru/post/my_week/","publishdate":"2023-03-17T20:18:17+03:00","relpermalink":"/ru/post/my_week/","section":"post","summary":"Эта неделя получилась у меня особо активной.\nНа выходных я отдыхала в гостях и была в кино.\nВ понедельник я сделала 6 лабораторную работу.\nВо вторник я написала контрольную работу по математическому анализу.","tags":[],"title":"My_week","type":"post"},{"authors":[],"categories":[],"content":"Введение Этот пост познакомит вас с системой контроля версий. Вначале изучим основы систем контроля версий, затем перейдём к тому, как запустить Git на ОС и окончательно настроить для работы. В конце получим окончательно настроенную для работы систему.\nСодержание\n О системе контроля версий Локальные системы контроля версий Централизованные системы контроля версий Распределённые системы контроля версий  О системе контроля версий\nЧто такое «система контроля версий» и почему это важно? Система контроля версий — это система, записывающая изменения в файл или набор файлов в течение времени и позволяющая вернуться позже к определённой версии. Для контроля версий файлов в этой книге в качестве примера будет использоваться исходный код программного обеспечения, хотя на самом деле вы можете использовать контроль версий практически для любых типов файлов.\nЕсли вы графический или web-дизайнер и хотите сохранить каждую версию изображения или макета (скорее всего, захотите), система контроля версий (далее VCS) — как раз то, что нужно. Она позволяет вернуть файлы к состоянию, в котором они были до изменений, вернуть проект к исходному состоянию, увидеть изменения, увидеть, кто последний менял что-то и вызвал проблему, кто поставил задачу и когда и многое другое. Использование VCS также значит в целом, что, если вы сломали что-то или потеряли файлы, вы спокойно можете всё исправить. В дополнение ко всему вы получите всё это без каких-либо дополнительных усилий.\nЛокальные системы контроля версий\nМногие люди в качестве метода контроля версий применяют копирование файлов в отдельный каталог (возможно даже, каталог с отметкой по времени, если они достаточно сообразительны). Данный подход очень распространён из-за его простоты, однако он невероятно сильно подвержен появлению ошибок. Можно легко забыть в каком каталоге вы находитесь и случайно изменить не тот файл или скопировать не те файлы, которые вы хотели.\nДля того, чтобы решить эту проблему, программисты давным-давно разработали локальные VCS с простой базой данных, которая хранит записи о всех изменениях в файлах, осуществляя тем самым контроль ревизий.\nОдной из популярных VCS была система RCS, которая и сегодня распространяется со многими компьютерами. RCS хранит на диске наборы патчей (различий между файлами) в специальном формате, применяя которые она может воссоздавать состояние каждого файла в заданный момент времени.\nЦентрализованные системы контроля версий\nСледующая серьёзная проблема, с которой сталкиваются люди, — это необходимость взаимодействовать с другими разработчиками. Для того, чтобы разобраться с ней, были разработаны централизованные системы контроля версий (Centralized Version Control System, далее CVCS). Такие системы, как CVS, Subversion и Perforce, используют единственный сервер, содержащий все версии файлов, и некоторое количество клиентов, которые получают файлы из этого централизованного хранилища. Применение CVCS являлось стандартом на протяжении многих лет.\nТакой подход имеет множество преимуществ, особенно перед локальными VCS. Например, все разработчики проекта в определённой степени знают, чем занимается каждый из них. Администраторы имеют полный контроль над тем, кто и что может делать, и гораздо проще администрировать CVCS, чем оперировать локальными базами данных на каждом клиенте.\nНесмотря на это, данный подход тоже имеет серьёзные минусы. Самый очевидный минус — это единая точка отказа, представленная централизованным сервером. Если этот сервер выйдет из строя на час, то в течение этого времени никто не сможет использовать контроль версий для сохранения изменений, над которыми работает, а также никто не сможет обмениваться этими изменениями с другими разработчиками. Если жёсткий диск, на котором хранится центральная БД, повреждён, а своевременные бэкапы отсутствуют, вы потеряете всё — всю историю проекта, не считая единичных снимков репозитория, которые сохранились на локальных машинах разработчиков. Локальные VCS страдают от той же самой проблемы: когда вся история проекта хранится в одном месте, вы рискуете потерять всё.\nРаспределённые системы контроля версий\nЗдесь в игру вступают распределённые системы контроля версий (Distributed Version Control System, далее DVCS). В DVCS (таких как Git, Mercurial, Bazaar или Darcs) клиенты не просто скачивают снимок всех файлов (состояние файлов на определённый момент времени) — они полностью копируют репозиторий. В этом случае, если один из серверов, через который разработчики обменивались данными, умрёт, любой клиентский репозиторий может быть скопирован на другой сервер для продолжения работы. Каждая копия репозитория является полным бэкапом всех данных.\nБолее того, многие DVCS могут одновременно взаимодействовать с несколькими удалёнными репозиториями, благодаря этому вы можете работать с различными группами людей, применяя различные подходы единовременно в рамках одного проекта. Это позволяет применять сразу несколько подходов в разработке, например, иерархические модели, что совершенно …","date":1679072803,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1679072803,"objectID":"b51c39c0ac0ec5a38bb139cda30bb055","permalink":"https://example.com/ru/post/git/","publishdate":"2023-03-17T20:06:43+03:00","relpermalink":"/ru/post/git/","section":"post","summary":"Введение Этот пост познакомит вас с системой контроля версий. Вначале изучим основы систем контроля версий, затем перейдём к тому, как запустить Git на ОС и окончательно настроить для работы. В конце получим окончательно настроенную для работы систему.","tags":[],"title":"Git","type":"post"},{"authors":["Чемоданова Ангелина","吳恩達"],"categories":["Demo","教程"],"content":"import libr print(\u0026#39;hello\u0026#39;) Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more    \nGet Started  👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem  Hugo Academic CLI: Automatically import publications from BibTeX  Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://example.com/ru/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/ru/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":null,"categories":null,"content":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you’ll find some examples of the types of technical content that can be rendered with Wowchemy.\nExamples Code Wowchemy supports a Markdown extension for highlighting code syntax. You can customize the styles under the syntax_highlighter option in your config/_default/params.yaml file.\n```python import pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() ```  renders as\nimport pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() Mindmaps Wowchemy supports a Markdown extension for mindmaps.\nSimply insert a Markdown markmap code block and optionally set the height of the mindmap as shown in the example below.\nA simple mindmap defined as a Markdown list:\n ```markmap {height=\u0026#34;200px\u0026#34;} - Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal ```    renders as\n- Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal  A more advanced mindmap with formatting, code blocks, and math:\n ```markmap - Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ ```    renders as\n- Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$  Charts Wowchemy supports the popular Plotly format for interactive charts.\nSave your Plotly JSON in your page folder, for example line-chart.json, and then add the {{\u0026lt; chart data=\u0026#34;line-chart\u0026#34; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\n  (function() { let a = setInterval( function() { if ( typeof window.Plotly === \u0026#39;undefined\u0026#39; ) { return; } clearInterval( a ); Plotly.d3.json(\u0026#34;./line-chart.json\u0026#34;, function(chart) { Plotly.plot(\u0026#39;chart-847615239\u0026#39;, chart.data, chart.layout, {responsive: true}); }); }, 500 ); })();  You might also find the Plotly JSON Editor useful.\nMath Wowchemy supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.yaml file.\nTo render inline or block math, wrap your LaTeX math with {{\u0026lt; math \u0026gt;}}$...${{\u0026lt; /math \u0026gt;}} or {{\u0026lt; math \u0026gt;}}$$...$${{\u0026lt; /math \u0026gt;}}, respectively. (We wrap the LaTeX math in the Wowchemy math shortcode to prevent Hugo rendering our math as Markdown. The math shortcode is new in v5.5-dev.)\nExample math block:\n{{\u0026lt; math \u0026gt;}} $$\\gamma_{n} =\\frac{ \\left| \\left(\\mathbfx_{n} -\\mathbfx_{n-1} \\right)^T \\left[\\nablaF (\\mathbfx_{n})-\\nablaF (\\mathbfx_{n-1})\\right]\\right|}{\\left\\|\\nablaF(\\mathbf{x}_{n})-\\nablaF(\\mathbf{x}_{n-1})\\right\\|^2} $$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$ Example inline math {{\u0026lt; math \u0026gt;}}$\\nabla F(\\mathbf{x}_{n})${{\u0026lt; /math \u0026gt;}} renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the math linebreak (\\\\):\n{{\u0026lt; math \u0026gt;}} $$f(k;p_{0}^{*})=\\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$ {{\u0026lt; /math \u0026gt;}} renders as\n$$ f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases} $$ Diagrams Wowchemy supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ```  renders as\ngraph TD A[Hard] --|Text| B(Round) B -- C{Decision} C --|One| D[Result 1] C --|Two| E[Result 2]  An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ```  renders as\nsequenceDiagram Alice-John: Hello John, how are you? loop Healthcheck John-John: Fight against hypochondria end Note right of John: Rational thoughts! John--Alice: Great! John-Bob: How about you? Bob--John: Jolly good!  An example Gantt diagram:\n```mermaid …","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://example.com/ru/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/ru/post/writing-technical-content/","section":"post","summary":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Markdown","type":"post"},{"authors":["Чемоданова Ангелина"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://example.com/ru/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":["Чемоданова Ангелина"],"categories":[],"content":"from IPython.core.display import Image Image(\u0026#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png\u0026#39;)    print(\u0026#34;Welcome to Academic!\u0026#34;) Welcome to Academic!  Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post\u0026#39;s title date: 2019-09-01 # Put any other Academic metadata here... --- Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post’s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=. Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://example.com/ru/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/ru/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/ru/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/ru/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Чемоданова Ангелина","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://example.com/ru/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Чемоданова Ангелина","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"ru","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://example.com/ru/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/ru/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]